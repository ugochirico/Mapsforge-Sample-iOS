//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/cache/TileCache.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapLayerCacheTileCache")
#ifdef RESTRICT_OrgMapsforgeMapLayerCacheTileCache
#define INCLUDE_ALL_OrgMapsforgeMapLayerCacheTileCache 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapLayerCacheTileCache 1
#endif
#undef RESTRICT_OrgMapsforgeMapLayerCacheTileCache

#if !defined (OrgMapsforgeMapLayerCacheTileCache_) && (INCLUDE_ALL_OrgMapsforgeMapLayerCacheTileCache || defined(INCLUDE_OrgMapsforgeMapLayerCacheTileCache))
#define OrgMapsforgeMapLayerCacheTileCache_

@class OrgMapsforgeMapLayerQueueJob;
@protocol JavaUtilSet;
@protocol OrgMapsforgeCoreGraphicsTileBitmap;

@protocol OrgMapsforgeMapLayerCacheTileCache < JavaObject >

- (jboolean)containsKeyWithOrgMapsforgeMapLayerQueueJob:(OrgMapsforgeMapLayerQueueJob *)key;

- (void)destroy;

- (id<OrgMapsforgeCoreGraphicsTileBitmap>)getWithOrgMapsforgeMapLayerQueueJob:(OrgMapsforgeMapLayerQueueJob *)key;

- (jint)getCapacity;

- (jint)getCapacityFirstLevel;

- (id<OrgMapsforgeCoreGraphicsTileBitmap>)getImmediatelyWithOrgMapsforgeMapLayerQueueJob:(OrgMapsforgeMapLayerQueueJob *)key;

- (void)purge;

- (void)putWithOrgMapsforgeMapLayerQueueJob:(OrgMapsforgeMapLayerQueueJob *)key
     withOrgMapsforgeCoreGraphicsTileBitmap:(id<OrgMapsforgeCoreGraphicsTileBitmap>)bitmap;

- (void)setWorkingSetWithJavaUtilSet:(id<JavaUtilSet>)workingSet;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapLayerCacheTileCache)

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerCacheTileCache)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapLayerCacheTileCache")
