//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/renderer/TileDependencies.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapLayerRendererTileDependencies")
#ifdef RESTRICT_OrgMapsforgeMapLayerRendererTileDependencies
#define INCLUDE_ALL_OrgMapsforgeMapLayerRendererTileDependencies 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapLayerRendererTileDependencies 1
#endif
#undef RESTRICT_OrgMapsforgeMapLayerRendererTileDependencies

#if !defined (OrgMapsforgeMapLayerRendererTileDependencies_) && (INCLUDE_ALL_OrgMapsforgeMapLayerRendererTileDependencies || defined(INCLUDE_OrgMapsforgeMapLayerRendererTileDependencies))
#define OrgMapsforgeMapLayerRendererTileDependencies_

@class OrgMapsforgeCoreMapelementsMapElementContainer;
@class OrgMapsforgeCoreModelTile;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface OrgMapsforgeMapLayerRendererTileDependencies : NSObject {
 @public
  id<JavaUtilMap> overlapData_;
}

#pragma mark Package-Private

- (instancetype)init;

- (void)addOverlappingElementWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)from
                             withOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)to
        withOrgMapsforgeCoreMapelementsMapElementContainer:(OrgMapsforgeCoreMapelementsMapElementContainer *)element;

- (id<JavaUtilSet>)getOverlappingElementsWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)from
                                         withOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)to;

- (void)removeTileDataWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)from;

- (void)removeTileDataWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)from
                      withOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)to;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapLayerRendererTileDependencies)

J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerRendererTileDependencies, overlapData_, id<JavaUtilMap>)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerRendererTileDependencies_init(OrgMapsforgeMapLayerRendererTileDependencies *self);

FOUNDATION_EXPORT OrgMapsforgeMapLayerRendererTileDependencies *new_OrgMapsforgeMapLayerRendererTileDependencies_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapLayerRendererTileDependencies *create_OrgMapsforgeMapLayerRendererTileDependencies_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerRendererTileDependencies)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapLayerRendererTileDependencies")
