//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/renderer/TileRendererLayer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapLayerRendererTileRendererLayer")
#ifdef RESTRICT_OrgMapsforgeMapLayerRendererTileRendererLayer
#define INCLUDE_ALL_OrgMapsforgeMapLayerRendererTileRendererLayer 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapLayerRendererTileRendererLayer 1
#endif
#undef RESTRICT_OrgMapsforgeMapLayerRendererTileRendererLayer

#if !defined (OrgMapsforgeMapLayerRendererTileRendererLayer_) && (INCLUDE_ALL_OrgMapsforgeMapLayerRendererTileRendererLayer || defined(INCLUDE_OrgMapsforgeMapLayerRendererTileRendererLayer))
#define OrgMapsforgeMapLayerRendererTileRendererLayer_

#define RESTRICT_OrgMapsforgeMapLayerTileLayer 1
#define INCLUDE_OrgMapsforgeMapLayerTileLayer 1
#include "org/mapsforge/map/layer/TileLayer.h"

@class OrgMapsforgeCoreModelTile;
@class OrgMapsforgeMapLayerRendererRendererJob;
@class OrgMapsforgeMapModelDisplayModel;
@class OrgMapsforgeMapModelMapViewPosition;
@protocol OrgMapsforgeCoreGraphicsGraphicFactory;
@protocol OrgMapsforgeCoreGraphicsTileBitmap;
@protocol OrgMapsforgeMapLayerCacheTileCache;
@protocol OrgMapsforgeMapLayerLabelsLabelStore;
@protocol OrgMapsforgeMapReaderMapDataStore;
@protocol OrgMapsforgeMapRenderthemeXmlRenderTheme;

@interface OrgMapsforgeMapLayerRendererTileRendererLayer : OrgMapsforgeMapLayerTileLayer

#pragma mark Public

- (instancetype)initWithOrgMapsforgeMapLayerCacheTileCache:(id<OrgMapsforgeMapLayerCacheTileCache>)tileCache
                     withOrgMapsforgeMapReaderMapDataStore:(id<OrgMapsforgeMapReaderMapDataStore>)mapDataStore
                   withOrgMapsforgeMapModelMapViewPosition:(OrgMapsforgeMapModelMapViewPosition *)mapViewPosition
                                               withBoolean:(jboolean)isTransparent
                                               withBoolean:(jboolean)renderLabels
                withOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory;

- (id<OrgMapsforgeMapLayerLabelsLabelStore>)getLabelStore;

- (id<OrgMapsforgeMapReaderMapDataStore>)getMapDataStore;

- (jfloat)getTextScale;

- (void)onDestroy;

- (void)setDisplayModelWithOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel;

- (void)setTextScaleWithFloat:(jfloat)textScale;

- (void)setXmlRenderThemeWithOrgMapsforgeMapRenderthemeXmlRenderTheme:(id<OrgMapsforgeMapRenderthemeXmlRenderTheme>)xmlRenderTheme;

#pragma mark Protected

- (void)compileRenderTheme;

- (OrgMapsforgeMapLayerRendererRendererJob *)createJobWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)tile;

- (jboolean)isTileStaleWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)tile
              withOrgMapsforgeCoreGraphicsTileBitmap:(id<OrgMapsforgeCoreGraphicsTileBitmap>)bitmap;

- (void)onAdd;

- (void)onRemove;

- (void)retrieveLabelsOnlyWithOrgMapsforgeMapLayerQueueJob:(OrgMapsforgeMapLayerRendererRendererJob *)job;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapLayerRendererTileRendererLayer)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerRendererTileRendererLayer_initWithOrgMapsforgeMapLayerCacheTileCache_withOrgMapsforgeMapReaderMapDataStore_withOrgMapsforgeMapModelMapViewPosition_withBoolean_withBoolean_withOrgMapsforgeCoreGraphicsGraphicFactory_(OrgMapsforgeMapLayerRendererTileRendererLayer *self, id<OrgMapsforgeMapLayerCacheTileCache> tileCache, id<OrgMapsforgeMapReaderMapDataStore> mapDataStore, OrgMapsforgeMapModelMapViewPosition *mapViewPosition, jboolean isTransparent, jboolean renderLabels, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory);

FOUNDATION_EXPORT OrgMapsforgeMapLayerRendererTileRendererLayer *new_OrgMapsforgeMapLayerRendererTileRendererLayer_initWithOrgMapsforgeMapLayerCacheTileCache_withOrgMapsforgeMapReaderMapDataStore_withOrgMapsforgeMapModelMapViewPosition_withBoolean_withBoolean_withOrgMapsforgeCoreGraphicsGraphicFactory_(id<OrgMapsforgeMapLayerCacheTileCache> tileCache, id<OrgMapsforgeMapReaderMapDataStore> mapDataStore, OrgMapsforgeMapModelMapViewPosition *mapViewPosition, jboolean isTransparent, jboolean renderLabels, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapLayerRendererTileRendererLayer *create_OrgMapsforgeMapLayerRendererTileRendererLayer_initWithOrgMapsforgeMapLayerCacheTileCache_withOrgMapsforgeMapReaderMapDataStore_withOrgMapsforgeMapModelMapViewPosition_withBoolean_withBoolean_withOrgMapsforgeCoreGraphicsGraphicFactory_(id<OrgMapsforgeMapLayerCacheTileCache> tileCache, id<OrgMapsforgeMapReaderMapDataStore> mapDataStore, OrgMapsforgeMapModelMapViewPosition *mapViewPosition, jboolean isTransparent, jboolean renderLabels, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerRendererTileRendererLayer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapLayerRendererTileRendererLayer")
