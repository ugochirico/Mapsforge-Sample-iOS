//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/download/TileDownloader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapLayerDownloadTileDownloader")
#ifdef RESTRICT_OrgMapsforgeMapLayerDownloadTileDownloader
#define INCLUDE_ALL_OrgMapsforgeMapLayerDownloadTileDownloader 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapLayerDownloadTileDownloader 1
#endif
#undef RESTRICT_OrgMapsforgeMapLayerDownloadTileDownloader

#if !defined (OrgMapsforgeMapLayerDownloadTileDownloader_) && (INCLUDE_ALL_OrgMapsforgeMapLayerDownloadTileDownloader || defined(INCLUDE_OrgMapsforgeMapLayerDownloadTileDownloader))
#define OrgMapsforgeMapLayerDownloadTileDownloader_

@class OrgMapsforgeMapLayerDownloadDownloadJob;
@protocol OrgMapsforgeCoreGraphicsGraphicFactory;
@protocol OrgMapsforgeCoreGraphicsTileBitmap;

@interface OrgMapsforgeMapLayerDownloadTileDownloader : NSObject

#pragma mark Package-Private

- (instancetype)initWithOrgMapsforgeMapLayerDownloadDownloadJob:(OrgMapsforgeMapLayerDownloadDownloadJob *)downloadJob
                     withOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory;

- (id<OrgMapsforgeCoreGraphicsTileBitmap>)downloadImage;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapLayerDownloadTileDownloader)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerDownloadTileDownloader_initWithOrgMapsforgeMapLayerDownloadDownloadJob_withOrgMapsforgeCoreGraphicsGraphicFactory_(OrgMapsforgeMapLayerDownloadTileDownloader *self, OrgMapsforgeMapLayerDownloadDownloadJob *downloadJob, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory);

FOUNDATION_EXPORT OrgMapsforgeMapLayerDownloadTileDownloader *new_OrgMapsforgeMapLayerDownloadTileDownloader_initWithOrgMapsforgeMapLayerDownloadDownloadJob_withOrgMapsforgeCoreGraphicsGraphicFactory_(OrgMapsforgeMapLayerDownloadDownloadJob *downloadJob, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapLayerDownloadTileDownloader *create_OrgMapsforgeMapLayerDownloadTileDownloader_initWithOrgMapsforgeMapLayerDownloadDownloadJob_withOrgMapsforgeCoreGraphicsGraphicFactory_(OrgMapsforgeMapLayerDownloadDownloadJob *downloadJob, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerDownloadTileDownloader)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapLayerDownloadTileDownloader")
