//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/queue/QueueItemScheduler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapLayerQueueQueueItemScheduler")
#ifdef RESTRICT_OrgMapsforgeMapLayerQueueQueueItemScheduler
#define INCLUDE_ALL_OrgMapsforgeMapLayerQueueQueueItemScheduler 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapLayerQueueQueueItemScheduler 1
#endif
#undef RESTRICT_OrgMapsforgeMapLayerQueueQueueItemScheduler

#if !defined (OrgMapsforgeMapLayerQueueQueueItemScheduler_) && (INCLUDE_ALL_OrgMapsforgeMapLayerQueueQueueItemScheduler || defined(INCLUDE_OrgMapsforgeMapLayerQueueQueueItemScheduler))
#define OrgMapsforgeMapLayerQueueQueueItemScheduler_

@class OrgMapsforgeCoreModelMapPosition;
@protocol JavaUtilCollection;

@interface OrgMapsforgeMapLayerQueueQueueItemScheduler : NSObject

#pragma mark Package-Private

+ (void)scheduleWithJavaUtilCollection:(id<JavaUtilCollection>)queueItems
  withOrgMapsforgeCoreModelMapPosition:(OrgMapsforgeCoreModelMapPosition *)mapPosition
                               withInt:(jint)tileSize;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapLayerQueueQueueItemScheduler)

inline jdouble OrgMapsforgeMapLayerQueueQueueItemScheduler_get_PENALTY_PER_ZOOM_LEVEL();
#define OrgMapsforgeMapLayerQueueQueueItemScheduler_PENALTY_PER_ZOOM_LEVEL 10.0
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeMapLayerQueueQueueItemScheduler, PENALTY_PER_ZOOM_LEVEL, jdouble)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerQueueQueueItemScheduler_scheduleWithJavaUtilCollection_withOrgMapsforgeCoreModelMapPosition_withInt_(id<JavaUtilCollection> queueItems, OrgMapsforgeCoreModelMapPosition *mapPosition, jint tileSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerQueueQueueItemScheduler)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapLayerQueueQueueItemScheduler")
