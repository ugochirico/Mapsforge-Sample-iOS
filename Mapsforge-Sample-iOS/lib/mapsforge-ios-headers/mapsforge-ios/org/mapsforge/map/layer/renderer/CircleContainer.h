//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/renderer/CircleContainer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapLayerRendererCircleContainer")
#ifdef RESTRICT_OrgMapsforgeMapLayerRendererCircleContainer
#define INCLUDE_ALL_OrgMapsforgeMapLayerRendererCircleContainer 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapLayerRendererCircleContainer 1
#endif
#undef RESTRICT_OrgMapsforgeMapLayerRendererCircleContainer

#if !defined (OrgMapsforgeMapLayerRendererCircleContainer_) && (INCLUDE_ALL_OrgMapsforgeMapLayerRendererCircleContainer || defined(INCLUDE_OrgMapsforgeMapLayerRendererCircleContainer))
#define OrgMapsforgeMapLayerRendererCircleContainer_

#define RESTRICT_OrgMapsforgeMapLayerRendererShapeContainer 1
#define INCLUDE_OrgMapsforgeMapLayerRendererShapeContainer 1
#include "org/mapsforge/map/layer/renderer/ShapeContainer.h"

@class OrgMapsforgeCoreModelPoint;
@class OrgMapsforgeMapLayerRendererShapeType;

@interface OrgMapsforgeMapLayerRendererCircleContainer : NSObject < OrgMapsforgeMapLayerRendererShapeContainer > {
 @public
  OrgMapsforgeCoreModelPoint *point_;
  jfloat radius_;
}

#pragma mark Public

- (OrgMapsforgeMapLayerRendererShapeType *)getShapeType;

#pragma mark Package-Private

- (instancetype)initWithOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)point
                                         withFloat:(jfloat)radius;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapLayerRendererCircleContainer)

J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerRendererCircleContainer, point_, OrgMapsforgeCoreModelPoint *)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerRendererCircleContainer_initWithOrgMapsforgeCoreModelPoint_withFloat_(OrgMapsforgeMapLayerRendererCircleContainer *self, OrgMapsforgeCoreModelPoint *point, jfloat radius);

FOUNDATION_EXPORT OrgMapsforgeMapLayerRendererCircleContainer *new_OrgMapsforgeMapLayerRendererCircleContainer_initWithOrgMapsforgeCoreModelPoint_withFloat_(OrgMapsforgeCoreModelPoint *point, jfloat radius) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapLayerRendererCircleContainer *create_OrgMapsforgeMapLayerRendererCircleContainer_initWithOrgMapsforgeCoreModelPoint_withFloat_(OrgMapsforgeCoreModelPoint *point, jfloat radius);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerRendererCircleContainer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapLayerRendererCircleContainer")
