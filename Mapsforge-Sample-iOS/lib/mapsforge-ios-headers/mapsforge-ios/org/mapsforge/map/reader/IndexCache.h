//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/reader/IndexCache.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapReaderIndexCache")
#ifdef RESTRICT_OrgMapsforgeMapReaderIndexCache
#define INCLUDE_ALL_OrgMapsforgeMapReaderIndexCache 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapReaderIndexCache 1
#endif
#undef RESTRICT_OrgMapsforgeMapReaderIndexCache

#if !defined (OrgMapsforgeMapReaderIndexCache_) && (INCLUDE_ALL_OrgMapsforgeMapReaderIndexCache || defined(INCLUDE_OrgMapsforgeMapReaderIndexCache))
#define OrgMapsforgeMapReaderIndexCache_

@class JavaIoRandomAccessFile;
@class OrgMapsforgeMapReaderHeaderSubFileParameter;

@interface OrgMapsforgeMapReaderIndexCache : NSObject

#pragma mark Package-Private

- (instancetype)initWithJavaIoRandomAccessFile:(JavaIoRandomAccessFile *)randomAccessFile
                                       withInt:(jint)capacity;

- (void)destroy;

- (jlong)getIndexEntryWithOrgMapsforgeMapReaderHeaderSubFileParameter:(OrgMapsforgeMapReaderHeaderSubFileParameter *)subFileParameter
                                                             withLong:(jlong)blockNumber;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapReaderIndexCache)

FOUNDATION_EXPORT void OrgMapsforgeMapReaderIndexCache_initWithJavaIoRandomAccessFile_withInt_(OrgMapsforgeMapReaderIndexCache *self, JavaIoRandomAccessFile *randomAccessFile, jint capacity);

FOUNDATION_EXPORT OrgMapsforgeMapReaderIndexCache *new_OrgMapsforgeMapReaderIndexCache_initWithJavaIoRandomAccessFile_withInt_(JavaIoRandomAccessFile *randomAccessFile, jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapReaderIndexCache *create_OrgMapsforgeMapReaderIndexCache_initWithJavaIoRandomAccessFile_withInt_(JavaIoRandomAccessFile *randomAccessFile, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapReaderIndexCache)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapReaderIndexCache")
