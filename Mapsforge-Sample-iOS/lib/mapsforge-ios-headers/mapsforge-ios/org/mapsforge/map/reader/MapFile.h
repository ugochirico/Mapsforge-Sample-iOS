//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/reader/MapFile.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapReaderMapFile")
#ifdef RESTRICT_OrgMapsforgeMapReaderMapFile
#define INCLUDE_ALL_OrgMapsforgeMapReaderMapFile 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapReaderMapFile 1
#endif
#undef RESTRICT_OrgMapsforgeMapReaderMapFile

#if !defined (OrgMapsforgeMapReaderMapFile_) && (INCLUDE_ALL_OrgMapsforgeMapReaderMapFile || defined(INCLUDE_OrgMapsforgeMapReaderMapFile))
#define OrgMapsforgeMapReaderMapFile_

#define RESTRICT_OrgMapsforgeMapReaderMapDataStore 1
#define INCLUDE_OrgMapsforgeMapReaderMapDataStore 1
#include "org/mapsforge/map/reader/MapDataStore.h"

@class JavaIoFile;
@class JavaLangByte;
@class OrgMapsforgeCoreModelBoundingBox;
@class OrgMapsforgeCoreModelLatLong;
@class OrgMapsforgeCoreModelTile;
@class OrgMapsforgeMapReaderHeaderMapFileInfo;
@class OrgMapsforgeMapReaderMapReadResult;

@interface OrgMapsforgeMapReaderMapFile : NSObject < OrgMapsforgeMapReaderMapDataStore >

#pragma mark Public

- (instancetype)initWithJavaIoFile:(JavaIoFile *)mapFile;

- (instancetype)initWithNSString:(NSString *)mapFileName;

- (OrgMapsforgeCoreModelBoundingBox *)boundingBox;

- (void)close;

- (jlong)getDataTimestampWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)tile;

- (OrgMapsforgeMapReaderHeaderMapFileInfo *)getMapFileInfo;

- (OrgMapsforgeMapReaderMapReadResult *)readMapDataWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)tile;

- (void)restrictToZoomRangeWithByte:(jbyte)minZoom
                           withByte:(jbyte)maxZoom;

- (OrgMapsforgeCoreModelLatLong *)startPosition;

- (JavaLangByte *)startZoomLevel;

- (jboolean)supportsTileWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)tile;

@end

J2OBJC_STATIC_INIT(OrgMapsforgeMapReaderMapFile)

inline OrgMapsforgeMapReaderMapFile *OrgMapsforgeMapReaderMapFile_get_TEST_MAP_FILE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgMapsforgeMapReaderMapFile *OrgMapsforgeMapReaderMapFile_TEST_MAP_FILE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapReaderMapFile, TEST_MAP_FILE, OrgMapsforgeMapReaderMapFile *)

inline jboolean OrgMapsforgeMapReaderMapFile_get_wayFilterEnabled();
inline jboolean OrgMapsforgeMapReaderMapFile_set_wayFilterEnabled(jboolean value);
inline jboolean *OrgMapsforgeMapReaderMapFile_getRef_wayFilterEnabled();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean OrgMapsforgeMapReaderMapFile_wayFilterEnabled;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeMapReaderMapFile, wayFilterEnabled, jboolean)

inline jint OrgMapsforgeMapReaderMapFile_get_wayFilterDistance();
inline jint OrgMapsforgeMapReaderMapFile_set_wayFilterDistance(jint value);
inline jint *OrgMapsforgeMapReaderMapFile_getRef_wayFilterDistance();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint OrgMapsforgeMapReaderMapFile_wayFilterDistance;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeMapReaderMapFile, wayFilterDistance, jint)

FOUNDATION_EXPORT void OrgMapsforgeMapReaderMapFile_initWithJavaIoFile_(OrgMapsforgeMapReaderMapFile *self, JavaIoFile *mapFile);

FOUNDATION_EXPORT OrgMapsforgeMapReaderMapFile *new_OrgMapsforgeMapReaderMapFile_initWithJavaIoFile_(JavaIoFile *mapFile) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapReaderMapFile *create_OrgMapsforgeMapReaderMapFile_initWithJavaIoFile_(JavaIoFile *mapFile);

FOUNDATION_EXPORT void OrgMapsforgeMapReaderMapFile_initWithNSString_(OrgMapsforgeMapReaderMapFile *self, NSString *mapFileName);

FOUNDATION_EXPORT OrgMapsforgeMapReaderMapFile *new_OrgMapsforgeMapReaderMapFile_initWithNSString_(NSString *mapFileName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapReaderMapFile *create_OrgMapsforgeMapReaderMapFile_initWithNSString_(NSString *mapFileName);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapReaderMapFile)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapReaderMapFile")
