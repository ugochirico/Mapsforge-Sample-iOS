//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/reader/MapReadResult.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapReaderMapReadResult")
#ifdef RESTRICT_OrgMapsforgeMapReaderMapReadResult
#define INCLUDE_ALL_OrgMapsforgeMapReaderMapReadResult 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapReaderMapReadResult 1
#endif
#undef RESTRICT_OrgMapsforgeMapReaderMapReadResult

#if !defined (OrgMapsforgeMapReaderMapReadResult_) && (INCLUDE_ALL_OrgMapsforgeMapReaderMapReadResult || defined(INCLUDE_OrgMapsforgeMapReaderMapReadResult))
#define OrgMapsforgeMapReaderMapReadResult_

@class OrgMapsforgeMapReaderMapReadResultBuilder;
@protocol JavaUtilList;

@interface OrgMapsforgeMapReaderMapReadResult : NSObject {
 @public
  jboolean isWater_;
  id<JavaUtilList> pointOfInterests_;
  id<JavaUtilList> ways_;
}

#pragma mark Package-Private

- (instancetype)initWithOrgMapsforgeMapReaderMapReadResultBuilder:(OrgMapsforgeMapReaderMapReadResultBuilder *)mapReadResultBuilder;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapReaderMapReadResult)

J2OBJC_FIELD_SETTER(OrgMapsforgeMapReaderMapReadResult, pointOfInterests_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapReaderMapReadResult, ways_, id<JavaUtilList>)

FOUNDATION_EXPORT void OrgMapsforgeMapReaderMapReadResult_initWithOrgMapsforgeMapReaderMapReadResultBuilder_(OrgMapsforgeMapReaderMapReadResult *self, OrgMapsforgeMapReaderMapReadResultBuilder *mapReadResultBuilder);

FOUNDATION_EXPORT OrgMapsforgeMapReaderMapReadResult *new_OrgMapsforgeMapReaderMapReadResult_initWithOrgMapsforgeMapReaderMapReadResultBuilder_(OrgMapsforgeMapReaderMapReadResultBuilder *mapReadResultBuilder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapReaderMapReadResult *create_OrgMapsforgeMapReaderMapReadResult_initWithOrgMapsforgeMapReaderMapReadResultBuilder_(OrgMapsforgeMapReaderMapReadResultBuilder *mapReadResultBuilder);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapReaderMapReadResult)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapReaderMapReadResult")
