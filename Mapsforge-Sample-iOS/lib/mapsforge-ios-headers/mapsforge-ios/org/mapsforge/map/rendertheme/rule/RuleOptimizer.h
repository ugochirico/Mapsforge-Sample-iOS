//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/rendertheme/rule/RuleOptimizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleRuleOptimizer")
#ifdef RESTRICT_OrgMapsforgeMapRenderthemeRuleRuleOptimizer
#define INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleRuleOptimizer 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleRuleOptimizer 1
#endif
#undef RESTRICT_OrgMapsforgeMapRenderthemeRuleRuleOptimizer

#if !defined (OrgMapsforgeMapRenderthemeRuleRuleOptimizer_) && (INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleRuleOptimizer || defined(INCLUDE_OrgMapsforgeMapRenderthemeRuleRuleOptimizer))
#define OrgMapsforgeMapRenderthemeRuleRuleOptimizer_

@class JavaUtilStack;
@protocol OrgMapsforgeMapRenderthemeRuleAttributeMatcher;
@protocol OrgMapsforgeMapRenderthemeRuleClosedMatcher;
@protocol OrgMapsforgeMapRenderthemeRuleElementMatcher;

@interface OrgMapsforgeMapRenderthemeRuleRuleOptimizer : NSObject

#pragma mark Package-Private

+ (id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher>)optimizeWithOrgMapsforgeMapRenderthemeRuleAttributeMatcher:(id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher>)attributeMatcher
                                                                                               withJavaUtilStack:(JavaUtilStack *)ruleStack;

+ (id<OrgMapsforgeMapRenderthemeRuleClosedMatcher>)optimizeWithOrgMapsforgeMapRenderthemeRuleClosedMatcher:(id<OrgMapsforgeMapRenderthemeRuleClosedMatcher>)closedMatcher
                                                                                         withJavaUtilStack:(JavaUtilStack *)ruleStack;

+ (id<OrgMapsforgeMapRenderthemeRuleElementMatcher>)optimizeWithOrgMapsforgeMapRenderthemeRuleElementMatcher:(id<OrgMapsforgeMapRenderthemeRuleElementMatcher>)elementMatcher
                                                                                           withJavaUtilStack:(JavaUtilStack *)ruleStack;

@end

J2OBJC_STATIC_INIT(OrgMapsforgeMapRenderthemeRuleRuleOptimizer)

FOUNDATION_EXPORT id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> OrgMapsforgeMapRenderthemeRuleRuleOptimizer_optimizeWithOrgMapsforgeMapRenderthemeRuleAttributeMatcher_withJavaUtilStack_(id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> attributeMatcher, JavaUtilStack *ruleStack);

FOUNDATION_EXPORT id<OrgMapsforgeMapRenderthemeRuleClosedMatcher> OrgMapsforgeMapRenderthemeRuleRuleOptimizer_optimizeWithOrgMapsforgeMapRenderthemeRuleClosedMatcher_withJavaUtilStack_(id<OrgMapsforgeMapRenderthemeRuleClosedMatcher> closedMatcher, JavaUtilStack *ruleStack);

FOUNDATION_EXPORT id<OrgMapsforgeMapRenderthemeRuleElementMatcher> OrgMapsforgeMapRenderthemeRuleRuleOptimizer_optimizeWithOrgMapsforgeMapRenderthemeRuleElementMatcher_withJavaUtilStack_(id<OrgMapsforgeMapRenderthemeRuleElementMatcher> elementMatcher, JavaUtilStack *ruleStack);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapRenderthemeRuleRuleOptimizer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleRuleOptimizer")
