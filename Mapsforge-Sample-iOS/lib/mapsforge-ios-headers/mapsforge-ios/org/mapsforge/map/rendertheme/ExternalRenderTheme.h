//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/rendertheme/ExternalRenderTheme.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapRenderthemeExternalRenderTheme")
#ifdef RESTRICT_OrgMapsforgeMapRenderthemeExternalRenderTheme
#define INCLUDE_ALL_OrgMapsforgeMapRenderthemeExternalRenderTheme 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapRenderthemeExternalRenderTheme 1
#endif
#undef RESTRICT_OrgMapsforgeMapRenderthemeExternalRenderTheme

#if !defined (OrgMapsforgeMapRenderthemeExternalRenderTheme_) && (INCLUDE_ALL_OrgMapsforgeMapRenderthemeExternalRenderTheme || defined(INCLUDE_OrgMapsforgeMapRenderthemeExternalRenderTheme))
#define OrgMapsforgeMapRenderthemeExternalRenderTheme_

#define RESTRICT_OrgMapsforgeMapRenderthemeXmlRenderTheme 1
#define INCLUDE_OrgMapsforgeMapRenderthemeXmlRenderTheme 1
#include "org/mapsforge/map/rendertheme/XmlRenderTheme.h"

@class JavaIoFile;
@class JavaIoInputStream;
@protocol OrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback;

@interface OrgMapsforgeMapRenderthemeExternalRenderTheme : NSObject < OrgMapsforgeMapRenderthemeXmlRenderTheme >

#pragma mark Public

- (instancetype)initWithJavaIoFile:(JavaIoFile *)renderThemeFile;

- (instancetype)initWithJavaIoFile:(JavaIoFile *)renderThemeFile
withOrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback:(id<OrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback>)menuCallback;

- (jboolean)isEqual:(id)obj;

- (id<OrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback>)getMenuCallback;

- (NSString *)getRelativePathPrefix;

- (JavaIoInputStream *)getRenderThemeAsStream;

- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapRenderthemeExternalRenderTheme)

FOUNDATION_EXPORT void OrgMapsforgeMapRenderthemeExternalRenderTheme_initWithJavaIoFile_(OrgMapsforgeMapRenderthemeExternalRenderTheme *self, JavaIoFile *renderThemeFile);

FOUNDATION_EXPORT OrgMapsforgeMapRenderthemeExternalRenderTheme *new_OrgMapsforgeMapRenderthemeExternalRenderTheme_initWithJavaIoFile_(JavaIoFile *renderThemeFile) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapRenderthemeExternalRenderTheme *create_OrgMapsforgeMapRenderthemeExternalRenderTheme_initWithJavaIoFile_(JavaIoFile *renderThemeFile);

FOUNDATION_EXPORT void OrgMapsforgeMapRenderthemeExternalRenderTheme_initWithJavaIoFile_withOrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback_(OrgMapsforgeMapRenderthemeExternalRenderTheme *self, JavaIoFile *renderThemeFile, id<OrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback> menuCallback);

FOUNDATION_EXPORT OrgMapsforgeMapRenderthemeExternalRenderTheme *new_OrgMapsforgeMapRenderthemeExternalRenderTheme_initWithJavaIoFile_withOrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback_(JavaIoFile *renderThemeFile, id<OrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback> menuCallback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapRenderthemeExternalRenderTheme *create_OrgMapsforgeMapRenderthemeExternalRenderTheme_initWithJavaIoFile_withOrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback_(JavaIoFile *renderThemeFile, id<OrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback> menuCallback);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapRenderthemeExternalRenderTheme)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapRenderthemeExternalRenderTheme")
