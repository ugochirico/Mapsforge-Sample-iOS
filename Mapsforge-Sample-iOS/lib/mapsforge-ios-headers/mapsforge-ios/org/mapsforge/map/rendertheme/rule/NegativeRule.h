//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/rendertheme/rule/NegativeRule.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleNegativeRule")
#ifdef RESTRICT_OrgMapsforgeMapRenderthemeRuleNegativeRule
#define INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleNegativeRule 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleNegativeRule 1
#endif
#undef RESTRICT_OrgMapsforgeMapRenderthemeRuleNegativeRule

#if !defined (OrgMapsforgeMapRenderthemeRuleNegativeRule_) && (INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleNegativeRule || defined(INCLUDE_OrgMapsforgeMapRenderthemeRuleNegativeRule))
#define OrgMapsforgeMapRenderthemeRuleNegativeRule_

#define RESTRICT_OrgMapsforgeMapRenderthemeRuleRule 1
#define INCLUDE_OrgMapsforgeMapRenderthemeRuleRule 1
#include "org/mapsforge/map/rendertheme/rule/Rule.h"

@class OrgMapsforgeMapRenderthemeRuleClosed;
@class OrgMapsforgeMapRenderthemeRuleRuleBuilder;
@protocol JavaUtilList;
@protocol OrgMapsforgeMapRenderthemeRuleAttributeMatcher;

@interface OrgMapsforgeMapRenderthemeRuleNegativeRule : OrgMapsforgeMapRenderthemeRuleRule

#pragma mark Package-Private

- (instancetype)initWithOrgMapsforgeMapRenderthemeRuleRuleBuilder:(OrgMapsforgeMapRenderthemeRuleRuleBuilder *)ruleBuilder
               withOrgMapsforgeMapRenderthemeRuleAttributeMatcher:(id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher>)attributeMatcher;

- (jboolean)matchesNodeWithJavaUtilList:(id<JavaUtilList>)tags
                               withByte:(jbyte)zoomLevel;

- (jboolean)matchesWayWithJavaUtilList:(id<JavaUtilList>)tags
                              withByte:(jbyte)zoomLevel
withOrgMapsforgeMapRenderthemeRuleClosed:(OrgMapsforgeMapRenderthemeRuleClosed *)closed;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapRenderthemeRuleNegativeRule)

FOUNDATION_EXPORT void OrgMapsforgeMapRenderthemeRuleNegativeRule_initWithOrgMapsforgeMapRenderthemeRuleRuleBuilder_withOrgMapsforgeMapRenderthemeRuleAttributeMatcher_(OrgMapsforgeMapRenderthemeRuleNegativeRule *self, OrgMapsforgeMapRenderthemeRuleRuleBuilder *ruleBuilder, id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> attributeMatcher);

FOUNDATION_EXPORT OrgMapsforgeMapRenderthemeRuleNegativeRule *new_OrgMapsforgeMapRenderthemeRuleNegativeRule_initWithOrgMapsforgeMapRenderthemeRuleRuleBuilder_withOrgMapsforgeMapRenderthemeRuleAttributeMatcher_(OrgMapsforgeMapRenderthemeRuleRuleBuilder *ruleBuilder, id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> attributeMatcher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapRenderthemeRuleNegativeRule *create_OrgMapsforgeMapRenderthemeRuleNegativeRule_initWithOrgMapsforgeMapRenderthemeRuleRuleBuilder_withOrgMapsforgeMapRenderthemeRuleAttributeMatcher_(OrgMapsforgeMapRenderthemeRuleRuleBuilder *ruleBuilder, id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> attributeMatcher);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapRenderthemeRuleNegativeRule)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleNegativeRule")
