//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/rendertheme/rule/NegativeMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleNegativeMatcher")
#ifdef RESTRICT_OrgMapsforgeMapRenderthemeRuleNegativeMatcher
#define INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleNegativeMatcher 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleNegativeMatcher 1
#endif
#undef RESTRICT_OrgMapsforgeMapRenderthemeRuleNegativeMatcher

#if !defined (OrgMapsforgeMapRenderthemeRuleNegativeMatcher_) && (INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleNegativeMatcher || defined(INCLUDE_OrgMapsforgeMapRenderthemeRuleNegativeMatcher))
#define OrgMapsforgeMapRenderthemeRuleNegativeMatcher_

#define RESTRICT_OrgMapsforgeMapRenderthemeRuleAttributeMatcher 1
#define INCLUDE_OrgMapsforgeMapRenderthemeRuleAttributeMatcher 1
#include "org/mapsforge/map/rendertheme/rule/AttributeMatcher.h"

@protocol JavaUtilList;

@interface OrgMapsforgeMapRenderthemeRuleNegativeMatcher : NSObject < OrgMapsforgeMapRenderthemeRuleAttributeMatcher >

#pragma mark Public

- (jboolean)isCoveredByWithOrgMapsforgeMapRenderthemeRuleAttributeMatcher:(id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher>)attributeMatcher;

- (jboolean)matchesWithJavaUtilList:(id<JavaUtilList>)tags;

#pragma mark Package-Private

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)keyList
                    withJavaUtilList:(id<JavaUtilList>)valueList;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapRenderthemeRuleNegativeMatcher)

FOUNDATION_EXPORT void OrgMapsforgeMapRenderthemeRuleNegativeMatcher_initWithJavaUtilList_withJavaUtilList_(OrgMapsforgeMapRenderthemeRuleNegativeMatcher *self, id<JavaUtilList> keyList, id<JavaUtilList> valueList);

FOUNDATION_EXPORT OrgMapsforgeMapRenderthemeRuleNegativeMatcher *new_OrgMapsforgeMapRenderthemeRuleNegativeMatcher_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> keyList, id<JavaUtilList> valueList) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapRenderthemeRuleNegativeMatcher *create_OrgMapsforgeMapRenderthemeRuleNegativeMatcher_initWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> keyList, id<JavaUtilList> valueList);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapRenderthemeRuleNegativeMatcher)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapRenderthemeRuleNegativeMatcher")
