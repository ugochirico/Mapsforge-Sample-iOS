//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/rendertheme/rule/PositiveRule.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeMapRenderthemeRulePositiveRule")
#ifdef RESTRICT_OrgMapsforgeMapRenderthemeRulePositiveRule
#define INCLUDE_ALL_OrgMapsforgeMapRenderthemeRulePositiveRule 0
#else
#define INCLUDE_ALL_OrgMapsforgeMapRenderthemeRulePositiveRule 1
#endif
#undef RESTRICT_OrgMapsforgeMapRenderthemeRulePositiveRule

#if !defined (OrgMapsforgeMapRenderthemeRulePositiveRule_) && (INCLUDE_ALL_OrgMapsforgeMapRenderthemeRulePositiveRule || defined(INCLUDE_OrgMapsforgeMapRenderthemeRulePositiveRule))
#define OrgMapsforgeMapRenderthemeRulePositiveRule_

#define RESTRICT_OrgMapsforgeMapRenderthemeRuleRule 1
#define INCLUDE_OrgMapsforgeMapRenderthemeRuleRule 1
#include "org/mapsforge/map/rendertheme/rule/Rule.h"

@class OrgMapsforgeMapRenderthemeRuleClosed;
@class OrgMapsforgeMapRenderthemeRuleRuleBuilder;
@protocol JavaUtilList;
@protocol OrgMapsforgeMapRenderthemeRuleAttributeMatcher;

@interface OrgMapsforgeMapRenderthemeRulePositiveRule : OrgMapsforgeMapRenderthemeRuleRule {
 @public
  id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> keyMatcher_;
  id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> valueMatcher_;
}

#pragma mark Package-Private

- (instancetype)initWithOrgMapsforgeMapRenderthemeRuleRuleBuilder:(OrgMapsforgeMapRenderthemeRuleRuleBuilder *)ruleBuilder
               withOrgMapsforgeMapRenderthemeRuleAttributeMatcher:(id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher>)keyMatcher
               withOrgMapsforgeMapRenderthemeRuleAttributeMatcher:(id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher>)valueMatcher;

- (jboolean)matchesNodeWithJavaUtilList:(id<JavaUtilList>)tags
                               withByte:(jbyte)zoomLevel;

- (jboolean)matchesWayWithJavaUtilList:(id<JavaUtilList>)tags
                              withByte:(jbyte)zoomLevel
withOrgMapsforgeMapRenderthemeRuleClosed:(OrgMapsforgeMapRenderthemeRuleClosed *)closed;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapRenderthemeRulePositiveRule)

J2OBJC_FIELD_SETTER(OrgMapsforgeMapRenderthemeRulePositiveRule, keyMatcher_, id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapRenderthemeRulePositiveRule, valueMatcher_, id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher>)

FOUNDATION_EXPORT void OrgMapsforgeMapRenderthemeRulePositiveRule_initWithOrgMapsforgeMapRenderthemeRuleRuleBuilder_withOrgMapsforgeMapRenderthemeRuleAttributeMatcher_withOrgMapsforgeMapRenderthemeRuleAttributeMatcher_(OrgMapsforgeMapRenderthemeRulePositiveRule *self, OrgMapsforgeMapRenderthemeRuleRuleBuilder *ruleBuilder, id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> keyMatcher, id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> valueMatcher);

FOUNDATION_EXPORT OrgMapsforgeMapRenderthemeRulePositiveRule *new_OrgMapsforgeMapRenderthemeRulePositiveRule_initWithOrgMapsforgeMapRenderthemeRuleRuleBuilder_withOrgMapsforgeMapRenderthemeRuleAttributeMatcher_withOrgMapsforgeMapRenderthemeRuleAttributeMatcher_(OrgMapsforgeMapRenderthemeRuleRuleBuilder *ruleBuilder, id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> keyMatcher, id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> valueMatcher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMapsforgeMapRenderthemeRulePositiveRule *create_OrgMapsforgeMapRenderthemeRulePositiveRule_initWithOrgMapsforgeMapRenderthemeRuleRuleBuilder_withOrgMapsforgeMapRenderthemeRuleAttributeMatcher_withOrgMapsforgeMapRenderthemeRuleAttributeMatcher_(OrgMapsforgeMapRenderthemeRuleRuleBuilder *ruleBuilder, id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> keyMatcher, id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher> valueMatcher);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapRenderthemeRulePositiveRule)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeMapRenderthemeRulePositiveRule")
