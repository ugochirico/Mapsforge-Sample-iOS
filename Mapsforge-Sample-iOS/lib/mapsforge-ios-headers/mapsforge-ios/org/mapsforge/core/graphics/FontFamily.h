//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/core/graphics/FontFamily.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeCoreGraphicsFontFamily")
#ifdef RESTRICT_OrgMapsforgeCoreGraphicsFontFamily
#define INCLUDE_ALL_OrgMapsforgeCoreGraphicsFontFamily 0
#else
#define INCLUDE_ALL_OrgMapsforgeCoreGraphicsFontFamily 1
#endif
#undef RESTRICT_OrgMapsforgeCoreGraphicsFontFamily

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMapsforgeCoreGraphicsFontFamily_) && (INCLUDE_ALL_OrgMapsforgeCoreGraphicsFontFamily || defined(INCLUDE_OrgMapsforgeCoreGraphicsFontFamily))
#define OrgMapsforgeCoreGraphicsFontFamily_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgMapsforgeCoreGraphicsFontFamily_Enum) {
  OrgMapsforgeCoreGraphicsFontFamily_Enum_DEFAULT = 0,
  OrgMapsforgeCoreGraphicsFontFamily_Enum_MONOSPACE = 1,
  OrgMapsforgeCoreGraphicsFontFamily_Enum_SANS_SERIF = 2,
  OrgMapsforgeCoreGraphicsFontFamily_Enum_SERIF = 3,
};

@interface OrgMapsforgeCoreGraphicsFontFamily : JavaLangEnum < NSCopying >

#pragma mark Public

+ (OrgMapsforgeCoreGraphicsFontFamily *)fromStringWithNSString:(NSString *)value;

+ (OrgMapsforgeCoreGraphicsFontFamily *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgMapsforgeCoreGraphicsFontFamily)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgMapsforgeCoreGraphicsFontFamily *OrgMapsforgeCoreGraphicsFontFamily_values_[];

inline OrgMapsforgeCoreGraphicsFontFamily *OrgMapsforgeCoreGraphicsFontFamily_get_DEFAULT();
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreGraphicsFontFamily, DEFAULT)

inline OrgMapsforgeCoreGraphicsFontFamily *OrgMapsforgeCoreGraphicsFontFamily_get_MONOSPACE();
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreGraphicsFontFamily, MONOSPACE)

inline OrgMapsforgeCoreGraphicsFontFamily *OrgMapsforgeCoreGraphicsFontFamily_get_SANS_SERIF();
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreGraphicsFontFamily, SANS_SERIF)

inline OrgMapsforgeCoreGraphicsFontFamily *OrgMapsforgeCoreGraphicsFontFamily_get_SERIF();
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreGraphicsFontFamily, SERIF)

FOUNDATION_EXPORT OrgMapsforgeCoreGraphicsFontFamily *OrgMapsforgeCoreGraphicsFontFamily_fromStringWithNSString_(NSString *value);

FOUNDATION_EXPORT IOSObjectArray *OrgMapsforgeCoreGraphicsFontFamily_values();

FOUNDATION_EXPORT OrgMapsforgeCoreGraphicsFontFamily *OrgMapsforgeCoreGraphicsFontFamily_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgMapsforgeCoreGraphicsFontFamily *OrgMapsforgeCoreGraphicsFontFamily_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeCoreGraphicsFontFamily)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeCoreGraphicsFontFamily")
