//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/core/graphics/Color.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMapsforgeCoreGraphicsColor")
#ifdef RESTRICT_OrgMapsforgeCoreGraphicsColor
#define INCLUDE_ALL_OrgMapsforgeCoreGraphicsColor 0
#else
#define INCLUDE_ALL_OrgMapsforgeCoreGraphicsColor 1
#endif
#undef RESTRICT_OrgMapsforgeCoreGraphicsColor

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMapsforgeCoreGraphicsColor_) && (INCLUDE_ALL_OrgMapsforgeCoreGraphicsColor || defined(INCLUDE_OrgMapsforgeCoreGraphicsColor))
#define OrgMapsforgeCoreGraphicsColor_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgMapsforgeCoreGraphicsColor_Enum) {
  OrgMapsforgeCoreGraphicsColor_Enum_BLACK = 0,
  OrgMapsforgeCoreGraphicsColor_Enum_BLUE = 1,
  OrgMapsforgeCoreGraphicsColor_Enum_GREEN = 2,
  OrgMapsforgeCoreGraphicsColor_Enum_RED = 3,
  OrgMapsforgeCoreGraphicsColor_Enum_TRANSPARENT = 4,
  OrgMapsforgeCoreGraphicsColor_Enum_WHITE = 5,
};

@interface OrgMapsforgeCoreGraphicsColor : JavaLangEnum < NSCopying >

#pragma mark Public

+ (OrgMapsforgeCoreGraphicsColor *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgMapsforgeCoreGraphicsColor)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgMapsforgeCoreGraphicsColor *OrgMapsforgeCoreGraphicsColor_values_[];

inline OrgMapsforgeCoreGraphicsColor *OrgMapsforgeCoreGraphicsColor_get_BLACK();
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreGraphicsColor, BLACK)

inline OrgMapsforgeCoreGraphicsColor *OrgMapsforgeCoreGraphicsColor_get_BLUE();
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreGraphicsColor, BLUE)

inline OrgMapsforgeCoreGraphicsColor *OrgMapsforgeCoreGraphicsColor_get_GREEN();
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreGraphicsColor, GREEN)

inline OrgMapsforgeCoreGraphicsColor *OrgMapsforgeCoreGraphicsColor_get_RED();
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreGraphicsColor, RED)

inline OrgMapsforgeCoreGraphicsColor *OrgMapsforgeCoreGraphicsColor_get_TRANSPARENT();
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreGraphicsColor, TRANSPARENT)

inline OrgMapsforgeCoreGraphicsColor *OrgMapsforgeCoreGraphicsColor_get_WHITE();
J2OBJC_ENUM_CONSTANT(OrgMapsforgeCoreGraphicsColor, WHITE)

FOUNDATION_EXPORT IOSObjectArray *OrgMapsforgeCoreGraphicsColor_values();

FOUNDATION_EXPORT OrgMapsforgeCoreGraphicsColor *OrgMapsforgeCoreGraphicsColor_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgMapsforgeCoreGraphicsColor *OrgMapsforgeCoreGraphicsColor_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeCoreGraphicsColor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgMapsforgeCoreGraphicsColor")
