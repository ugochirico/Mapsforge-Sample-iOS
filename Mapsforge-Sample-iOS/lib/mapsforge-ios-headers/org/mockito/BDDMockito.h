//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ugos/j2objc-master/testing/mockito/build_result/java/org/mockito/BDDMockito.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoBDDMockito")
#ifdef RESTRICT_OrgMockitoBDDMockito
#define INCLUDE_ALL_OrgMockitoBDDMockito 0
#else
#define INCLUDE_ALL_OrgMockitoBDDMockito 1
#endif
#undef RESTRICT_OrgMockitoBDDMockito
#ifdef INCLUDE_OrgMockitoBDDMockito_BDDStubberImpl
#define INCLUDE_OrgMockitoBDDMockito_BDDStubber 1
#endif
#ifdef INCLUDE_OrgMockitoBDDMockito_BDDOngoingStubbingImpl
#define INCLUDE_OrgMockitoBDDMockito_BDDMyOngoingStubbing 1
#endif

#if !defined (OrgMockitoBDDMockito_) && (INCLUDE_ALL_OrgMockitoBDDMockito || defined(INCLUDE_OrgMockitoBDDMockito))
#define OrgMockitoBDDMockito_

#define RESTRICT_OrgMockitoMockito 1
#define INCLUDE_OrgMockitoMockito 1
#include "org/mockito/Mockito.h"

@class IOSClass;
@protocol OrgMockitoBDDMockito_BDDMyOngoingStubbing;
@protocol OrgMockitoBDDMockito_BDDStubber;
@protocol OrgMockitoStubbingAnswer;

@interface OrgMockitoBDDMockito : OrgMockitoMockito

#pragma mark Public

- (instancetype)init;

+ (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)givenWithId:(id)methodCall;

+ (id<OrgMockitoBDDMockito_BDDStubber>)willAnswerWithOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)answer;

+ (id<OrgMockitoBDDMockito_BDDStubber>)willCallRealMethod;

+ (id<OrgMockitoBDDMockito_BDDStubber>)willDoNothing;

+ (id<OrgMockitoBDDMockito_BDDStubber>)willReturnWithId:(id)toBeReturned;

+ (id<OrgMockitoBDDMockito_BDDStubber>)willThrowWithIOSClass:(IOSClass *)toBeThrown;

+ (id<OrgMockitoBDDMockito_BDDStubber>)willThrowWithNSException:(NSException *)toBeThrown;
#define willThrowWithJavaLangThrowable willThrowWithNSException

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoBDDMockito)

FOUNDATION_EXPORT void OrgMockitoBDDMockito_init(OrgMockitoBDDMockito *self);

FOUNDATION_EXPORT OrgMockitoBDDMockito *new_OrgMockitoBDDMockito_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoBDDMockito *create_OrgMockitoBDDMockito_init();

FOUNDATION_EXPORT id<OrgMockitoBDDMockito_BDDMyOngoingStubbing> OrgMockitoBDDMockito_givenWithId_(id methodCall);

FOUNDATION_EXPORT id<OrgMockitoBDDMockito_BDDStubber> OrgMockitoBDDMockito_willThrowWithNSException_(NSException *toBeThrown);

FOUNDATION_EXPORT id<OrgMockitoBDDMockito_BDDStubber> OrgMockitoBDDMockito_willThrowWithIOSClass_(IOSClass *toBeThrown);

FOUNDATION_EXPORT id<OrgMockitoBDDMockito_BDDStubber> OrgMockitoBDDMockito_willAnswerWithOrgMockitoStubbingAnswer_(id<OrgMockitoStubbingAnswer> answer);

FOUNDATION_EXPORT id<OrgMockitoBDDMockito_BDDStubber> OrgMockitoBDDMockito_willDoNothing();

FOUNDATION_EXPORT id<OrgMockitoBDDMockito_BDDStubber> OrgMockitoBDDMockito_willReturnWithId_(id toBeReturned);

FOUNDATION_EXPORT id<OrgMockitoBDDMockito_BDDStubber> OrgMockitoBDDMockito_willCallRealMethod();

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoBDDMockito)

#endif

#if !defined (OrgMockitoBDDMockito_BDDMyOngoingStubbing_) && (INCLUDE_ALL_OrgMockitoBDDMockito || defined(INCLUDE_OrgMockitoBDDMockito_BDDMyOngoingStubbing))
#define OrgMockitoBDDMockito_BDDMyOngoingStubbing_

@class IOSObjectArray;
@protocol OrgMockitoStubbingAnswer;

@protocol OrgMockitoBDDMockito_BDDMyOngoingStubbing < JavaObject >

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willAnswerWithOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)answer;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willWithOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)answer;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willReturnWithId:(id)value;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willReturnWithId:(id)value
                                                withNSObjectArray:(IOSObjectArray *)values;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willThrowWithNSExceptionArray:(IOSObjectArray *)throwables;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willThrowWithIOSClassArray:(IOSObjectArray *)throwableClasses;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willCallRealMethod;

- (id)getMock;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoBDDMockito_BDDMyOngoingStubbing)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoBDDMockito_BDDMyOngoingStubbing)

#endif

#if !defined (OrgMockitoBDDMockito_BDDOngoingStubbingImpl_) && (INCLUDE_ALL_OrgMockitoBDDMockito || defined(INCLUDE_OrgMockitoBDDMockito_BDDOngoingStubbingImpl))
#define OrgMockitoBDDMockito_BDDOngoingStubbingImpl_

@class IOSObjectArray;
@protocol OrgMockitoBDDMockito_BDDMyOngoingStubbing;
@protocol OrgMockitoStubbingAnswer;
@protocol OrgMockitoStubbingOngoingStubbing;

@interface OrgMockitoBDDMockito_BDDOngoingStubbingImpl : NSObject < OrgMockitoBDDMockito_BDDMyOngoingStubbing >

#pragma mark Public

- (instancetype)initWithOrgMockitoStubbingOngoingStubbing:(id<OrgMockitoStubbingOngoingStubbing>)ongoingStubbing;

- (id)getMock;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willWithOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)answer;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willAnswerWithOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)answer;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willCallRealMethod;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willReturnWithId:(id)value;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willReturnWithId:(id)value
                                                withNSObjectArray:(IOSObjectArray *)values;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willThrowWithIOSClassArray:(IOSObjectArray *)throwableClasses;

- (id<OrgMockitoBDDMockito_BDDMyOngoingStubbing>)willThrowWithNSExceptionArray:(IOSObjectArray *)throwables;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoBDDMockito_BDDOngoingStubbingImpl)

FOUNDATION_EXPORT void OrgMockitoBDDMockito_BDDOngoingStubbingImpl_initWithOrgMockitoStubbingOngoingStubbing_(OrgMockitoBDDMockito_BDDOngoingStubbingImpl *self, id<OrgMockitoStubbingOngoingStubbing> ongoingStubbing);

FOUNDATION_EXPORT OrgMockitoBDDMockito_BDDOngoingStubbingImpl *new_OrgMockitoBDDMockito_BDDOngoingStubbingImpl_initWithOrgMockitoStubbingOngoingStubbing_(id<OrgMockitoStubbingOngoingStubbing> ongoingStubbing) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoBDDMockito_BDDOngoingStubbingImpl *create_OrgMockitoBDDMockito_BDDOngoingStubbingImpl_initWithOrgMockitoStubbingOngoingStubbing_(id<OrgMockitoStubbingOngoingStubbing> ongoingStubbing);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoBDDMockito_BDDOngoingStubbingImpl)

#endif

#if !defined (OrgMockitoBDDMockito_BDDStubber_) && (INCLUDE_ALL_OrgMockitoBDDMockito || defined(INCLUDE_OrgMockitoBDDMockito_BDDStubber))
#define OrgMockitoBDDMockito_BDDStubber_

@class IOSClass;
@protocol OrgMockitoStubbingAnswer;

@protocol OrgMockitoBDDMockito_BDDStubber < JavaObject >

- (id<OrgMockitoBDDMockito_BDDStubber>)willAnswerWithOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)answer;

- (id<OrgMockitoBDDMockito_BDDStubber>)willNothing;

- (id<OrgMockitoBDDMockito_BDDStubber>)willReturnWithId:(id)toBeReturned;

- (id<OrgMockitoBDDMockito_BDDStubber>)willThrowWithNSException:(NSException *)toBeThrown;
#define willThrowWithJavaLangThrowable willThrowWithNSException

- (id<OrgMockitoBDDMockito_BDDStubber>)willThrowWithIOSClass:(IOSClass *)toBeThrown;

- (id<OrgMockitoBDDMockito_BDDStubber>)willCallRealMethod;

- (id)givenWithId:(id)mock;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoBDDMockito_BDDStubber)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoBDDMockito_BDDStubber)

#endif

#if !defined (OrgMockitoBDDMockito_BDDStubberImpl_) && (INCLUDE_ALL_OrgMockitoBDDMockito || defined(INCLUDE_OrgMockitoBDDMockito_BDDStubberImpl))
#define OrgMockitoBDDMockito_BDDStubberImpl_

@class IOSClass;
@protocol OrgMockitoBDDMockito_BDDStubber;
@protocol OrgMockitoStubbingAnswer;
@protocol OrgMockitoStubbingStubber;

@interface OrgMockitoBDDMockito_BDDStubberImpl : NSObject < OrgMockitoBDDMockito_BDDStubber >

#pragma mark Public

- (instancetype)initWithOrgMockitoStubbingStubber:(id<OrgMockitoStubbingStubber>)mockitoStubber;

- (id)givenWithId:(id)mock;

- (id<OrgMockitoBDDMockito_BDDStubber>)willAnswerWithOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)answer;

- (id<OrgMockitoBDDMockito_BDDStubber>)willCallRealMethod;

- (id<OrgMockitoBDDMockito_BDDStubber>)willNothing;

- (id<OrgMockitoBDDMockito_BDDStubber>)willReturnWithId:(id)toBeReturned;

- (id<OrgMockitoBDDMockito_BDDStubber>)willThrowWithIOSClass:(IOSClass *)toBeThrown;

- (id<OrgMockitoBDDMockito_BDDStubber>)willThrowWithNSException:(NSException *)toBeThrown;
#define willThrowWithJavaLangThrowable willThrowWithNSException

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoBDDMockito_BDDStubberImpl)

FOUNDATION_EXPORT void OrgMockitoBDDMockito_BDDStubberImpl_initWithOrgMockitoStubbingStubber_(OrgMockitoBDDMockito_BDDStubberImpl *self, id<OrgMockitoStubbingStubber> mockitoStubber);

FOUNDATION_EXPORT OrgMockitoBDDMockito_BDDStubberImpl *new_OrgMockitoBDDMockito_BDDStubberImpl_initWithOrgMockitoStubbingStubber_(id<OrgMockitoStubbingStubber> mockitoStubber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoBDDMockito_BDDStubberImpl *create_OrgMockitoBDDMockito_BDDStubberImpl_initWithOrgMockitoStubbingStubber_(id<OrgMockitoStubbingStubber> mockitoStubber);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoBDDMockito_BDDStubberImpl)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoBDDMockito")
